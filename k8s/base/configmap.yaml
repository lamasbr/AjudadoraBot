apiVersion: v1
kind: ConfigMap
metadata:
  name: ajudadorabot-config
  labels:
    app.kubernetes.io/name: ajudadorabot
    app.kubernetes.io/component: config
data:
  appsettings.json: |
    {
      "TelegramBot": {
        "Mode": "Webhook",
        "MaxRetryAttempts": 3,
        "TimeoutSeconds": 30,
        "PollingIntervalMs": 1000
      },
      "MiniApp": {
        "JwtIssuer": "AjudadoraBot",
        "JwtAudience": "AjudadoraBot-Users",
        "JwtExpirationMinutes": 1440,
        "AllowedOrigins": [
          "https://t.me"
        ]
      },
      "Analytics": {
        "Enabled": true,
        "RetentionDays": 90,
        "BatchSize": 100,
        "FlushIntervalMinutes": 5
      },
      "Logging": {
        "LogLevel": {
          "Default": "Information",
          "Microsoft.AspNetCore": "Warning",
          "Microsoft.EntityFrameworkCore": "Warning",
          "AjudadoraBot": "Information"
        }
      },
      "RateLimiting": {
        "Enabled": true,
        "PermitLimit": 100,
        "WindowMinutes": 1,
        "QueueLimit": 10
      },
      "BackgroundServices": {
        "SessionCleanupIntervalMinutes": 60,
        "AnalyticsFlushIntervalMinutes": 5,
        "ErrorLogCleanupIntervalHours": 24
      },
      "HealthChecks": {
        "Timeout": "00:00:30",
        "Interval": "00:00:30"
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  labels:
    app.kubernetes.io/name: ajudadorabot
    app.kubernetes.io/component: nginx
data:
  nginx.conf: |
    worker_processes auto;
    error_log /var/log/nginx/error.log warn;
    pid /var/run/nginx.pid;
    
    events {
        worker_connections 1024;
        use epoll;
        multi_accept on;
    }
    
    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        
        # Logging
        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                       '$status $body_bytes_sent "$http_referer" '
                       '"$http_user_agent" "$http_x_forwarded_for"';
        access_log /var/log/nginx/access.log main;
        
        # Performance
        sendfile on;
        tcp_nopush on;
        tcp_nodelay on;
        keepalive_timeout 65;
        types_hash_max_size 2048;
        client_max_body_size 10M;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
            
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Rate limiting
        limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
        limit_req_zone $binary_remote_addr zone=webhook:10m rate=50r/s;
        
        upstream ajudadorabot-api {
            server ajudadorabot-api-service:8080;
            keepalive 32;
        }
        
        server {
            listen 80;
            server_name _;
            
            # Health check endpoint
            location /health {
                access_log off;
                return 200 "healthy\n";
                add_header Content-Type text/plain;
            }
            
            # Webhook endpoint with higher rate limit
            location /webhook {
                limit_req zone=webhook burst=100 nodelay;
                proxy_pass http://ajudadorabot-api;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_connect_timeout 5s;
                proxy_send_timeout 10s;
                proxy_read_timeout 10s;
            }
            
            # API endpoints
            location /api/ {
                limit_req zone=api burst=20 nodelay;
                proxy_pass http://ajudadorabot-api;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_bypass $http_upgrade;
                proxy_connect_timeout 5s;
                proxy_send_timeout 30s;
                proxy_read_timeout 30s;
            }
            
            # Static files (Mini App)
            location / {
                proxy_pass http://ajudadorabot-api;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_cache_valid 200 1h;
                proxy_cache_valid 404 1m;
                expires 1h;
                add_header Cache-Control "public, immutable";
            }
        }
    }