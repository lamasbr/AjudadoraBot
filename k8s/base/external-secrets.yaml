# External Secrets Operator Configuration
# Manages secrets from external secret management systems like AWS Secrets Manager, Azure Key Vault, etc.

apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: aws-secrets-manager
  labels:
    app.kubernetes.io/name: ajudadorabot
    app.kubernetes.io/component: secrets
spec:
  provider:
    aws:
      service: SecretsManager
      region: "us-east-1"
      auth:
        serviceAccountRef:
          name: external-secrets-sa
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: ajudadorabot-external-secret
  labels:
    app.kubernetes.io/name: ajudadorabot
    app.kubernetes.io/component: secrets
spec:
  refreshInterval: 5m
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: ajudadorabot-secrets
    creationPolicy: Owner
    template:
      type: Opaque
      engineVersion: v2
      data:
        telegram-bot-token: "{{ .telegram_bot_token }}"
        webhook-url: "{{ .webhook_url }}"
        webhook-secret-token: "{{ .webhook_secret_token }}"
        jwt-secret: "{{ .jwt_secret }}"
        postgres-connection-string: "Host={{ .postgres_host }};Database={{ .postgres_db }};Username={{ .postgres_user }};Password={{ .postgres_password }}"
        redis-connection-string: "{{ .redis_host }}:{{ .redis_port }}"
        redis-password: "{{ .redis_password }}"
        smtp-username: "{{ .smtp_username }}"
        smtp-password: "{{ .smtp_password }}"
        grafana-admin-password: "{{ .grafana_admin_password }}"
        slack-webhook-url: "{{ .slack_webhook_url }}"
        aws-access-key-id: "{{ .aws_access_key_id }}"
        aws-secret-access-key: "{{ .aws_secret_access_key }}"
        encryption-key: "{{ .encryption_key }}"
  data:
  - secretKey: telegram_bot_token
    remoteRef:
      key: ajudadorabot/telegram
      property: bot_token
  - secretKey: webhook_url
    remoteRef:
      key: ajudadorabot/telegram
      property: webhook_url
  - secretKey: webhook_secret_token
    remoteRef:
      key: ajudadorabot/telegram
      property: webhook_secret_token
  - secretKey: jwt_secret
    remoteRef:
      key: ajudadorabot/auth
      property: jwt_secret
  - secretKey: postgres_host
    remoteRef:
      key: ajudadorabot/database
      property: postgres_host
  - secretKey: postgres_db
    remoteRef:
      key: ajudadorabot/database
      property: postgres_db
  - secretKey: postgres_user
    remoteRef:
      key: ajudadorabot/database
      property: postgres_user
  - secretKey: postgres_password
    remoteRef:
      key: ajudadorabot/database
      property: postgres_password
  - secretKey: redis_host
    remoteRef:
      key: ajudadorabot/redis
      property: host
  - secretKey: redis_port
    remoteRef:
      key: ajudadorabot/redis
      property: port
  - secretKey: redis_password
    remoteRef:
      key: ajudadorabot/redis
      property: password
  - secretKey: smtp_username
    remoteRef:
      key: ajudadorabot/smtp
      property: username
  - secretKey: smtp_password
    remoteRef:
      key: ajudadorabot/smtp
      property: password
  - secretKey: grafana_admin_password
    remoteRef:
      key: ajudadorabot/monitoring
      property: grafana_admin_password
  - secretKey: slack_webhook_url
    remoteRef:
      key: ajudadorabot/notifications
      property: slack_webhook_url
  - secretKey: aws_access_key_id
    remoteRef:
      key: ajudadorabot/aws
      property: access_key_id
  - secretKey: aws_secret_access_key
    remoteRef:
      key: ajudadorabot/aws
      property: secret_access_key
  - secretKey: encryption_key
    remoteRef:
      key: ajudadorabot/security
      property: encryption_key
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: external-secrets-sa
  labels:
    app.kubernetes.io/name: ajudadorabot
    app.kubernetes.io/component: secrets
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT-ID:role/external-secrets-role
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-secrets-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "update", "delete", "get", "list", "watch"]
- apiGroups: ["external-secrets.io"]
  resources: ["secretstores", "externalsecrets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: external-secrets-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: external-secrets-role
subjects:
- kind: ServiceAccount
  name: external-secrets-sa
  namespace: default