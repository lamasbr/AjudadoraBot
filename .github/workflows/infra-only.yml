name: Terraform Infra (Plan/Apply)

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Choose Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
      environment:
        description: 'Target environment'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging
      auto_approve:
        description: 'Auto approve apply'
        required: false
        default: false
        type: boolean
  push:
    branches: [ 'infra/**' ]

permissions:
  contents: read
  id-token: write

concurrency:
  group: terraform-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    name: Terraform ${{ inputs.action || 'plan' }} (${{ inputs.environment || 'production' }})
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment || 'production' }}
    timeout-minutes: 30

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.12.2

    - name: Azure Login (OIDC)
      uses: azure/login@v2
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Terraform Init
      working-directory: ./terraform
      env:
        ARM_USE_OIDC: true
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      run: terraform init -upgrade

    - name: Terraform Validate
      working-directory: ./terraform
      run: terraform validate

    - name: Terraform Plan
      if: ${{ inputs.action == 'plan' || inputs.action == '' }}
      working-directory: ./terraform
      env:
        ARM_USE_OIDC: true
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_environment: ${{ inputs.environment || 'production' }}
        TF_VAR_telegram_bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TF_VAR_datadog_api_key: ${{ secrets.DATADOG_API_KEY }}
        TF_VAR_ghcr_username: ${{ github.actor }}
        TF_VAR_ghcr_token: ${{ secrets.GITHUB_TOKEN }}
      run: terraform plan -out=tfplan

    - name: Terraform Apply
      if: ${{ inputs.action == 'apply' }}
      working-directory: ./terraform
      env:
        ARM_USE_OIDC: true
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        TF_VAR_environment: ${{ inputs.environment || 'production' }}
        TF_VAR_telegram_bot_token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TF_VAR_datadog_api_key: ${{ secrets.DATADOG_API_KEY }}
        TF_VAR_ghcr_username: ${{ github.actor }}
        TF_VAR_ghcr_token: ${{ secrets.GITHUB_TOKEN }}
      run: |
        if [ "${{ inputs.auto_approve }}" = "true" ]; then
          terraform apply -auto-approve tfplan || terraform apply -auto-approve
        else
          terraform apply tfplan || terraform apply
        fi

    - name: Show Outputs
      if: always()
      working-directory: ./terraform
      run: |
        terraform output || true
