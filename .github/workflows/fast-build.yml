name: Fast Build Pipeline (No Code Analysis)

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      deploy_environment:
        description: 'Environment to deploy to'
        required: false
        default: 'none'
        type: choice
        options:
        - none
        - staging
        - production

env:
  DOTNET_VERSION: '9.0'
  NODE_VERSION: '20'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/ajudadorabot

jobs:
  # ================================
  # Fast Build & Test (Minimal)
  # ================================
  fast-build:
    name: Fast Build & Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Restore .NET dependencies
      run: dotnet restore
      
    - name: Build .NET solution
      run: dotnet build --no-restore --configuration Release
      
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci
      
    - name: Build frontend
      working-directory: frontend
      run: npm run build || echo "No build script found"
      
    - name: Run essential tests only
      run: |
        # Run only unit tests for speed
        dotnet test tests/AjudadoraBot.UnitTests/AjudadoraBot.UnitTests.csproj \
          --no-build \
          --configuration Release \
          --logger "console;verbosity=minimal"
          
    - name: Run frontend tests
      working-directory: frontend
      run: npm test -- --passWithNoTests --watchAll=false

  # ================================
  # Container Build (If Main Branch)
  # ================================
  container-build:
    name: Build Container
    runs-on: ubuntu-latest
    needs: [fast-build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile.combined
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # ================================
  # Optional Deploy (Manual)
  # ================================
  deploy:
    name: Deploy to Environment
    runs-on: ubuntu-latest
    needs: [container-build]
    if: |
      github.event.inputs.deploy_environment != 'none' &&
      github.event.inputs.deploy_environment != ''
    environment:
      name: ${{ github.event.inputs.deploy_environment }}
      
    steps:
    - name: Deploy notification
      run: |
        echo "Deploying to ${{ github.event.inputs.deploy_environment }}"
        echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}"
        
    # Add actual deployment steps here based on environment
    - name: Deploy to Azure (placeholder)
      run: |
        echo "Would deploy to Azure App Service here"
        echo "Environment: ${{ github.event.inputs.deploy_environment }}"